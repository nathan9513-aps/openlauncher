apply plugin: 'com.android.application'

android {
    namespace 'com.benny.openlauncher'
    buildFeatures {
        buildConfig true
    }
    signingConfigs {
        release {
            // Prefer module keystore, fall back to repository root keystore if present
            def ks = file("keystore.jks")
            if (!ks.exists()) {
                def rootKs = rootProject.file('keystore.jks')
                if (rootKs.exists()) {
                    ks = rootKs
                }
            }
            if (ks.exists()) {
                storeFile ks
                storePassword "Dennisd-401!"
                keyAlias "key1"
                keyPassword "Dennisd-401!"
            } else {
                // No keystore found; release builds will be unsigned in CI unless a keystore is provided.
            }
        }
    }
    compileSdkVersion version_compileSdk
    buildToolsVersion version_buildTools

    defaultConfig {
    minSdkVersion version_minSdk
    targetSdkVersion version_compileSdk

        flavorDimensions "versionCode"
        multiDexEnabled false


        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "BUILD_DATE", "\"${getBuildDate()}\""
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        resValue "string", "manifest_package_id", "com.benny.openlauncher"

        resValue 'string', 'app_name', "OpenLauncher"

        applicationId "com.benny.openlauncher"
        versionCode 100
        versionName "1.0.0"
    }

    productFlavors {
        flavorDefault {
        }

        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }

        flavorAtest {
          buildConfigField "boolean", "IS_NIGHTLY_BUILD", "true"
          versionCode = Integer.parseInt(new Date().format('yyMMdd'))
          versionName = new Date().format('yyMMdd')
          applicationId "com.benny.openlauncher.nightly"
          resValue 'string', 'app_name', "OL Nightly"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Apply signing config only if keystore was found and configured above
            if (signingConfigs.release.storeFile != null && signingConfigs.release.storeFile.exists()) {
                signingConfig signingConfigs.release
            }
            // Abilita la generazione di AAB firmato
            // ./gradlew bundleRelease
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name != 'multidex' && details.requested.name != 'multidex-instrumentation') {
                        details.useVersion "${version_library_appcompat}"
                    }
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE-LGPL-2.1.txt'
        exclude 'META-INF/LICENSE-LGPL-3.txt'
        exclude 'META-INF/LICENSE-W3C-TEST'
    }

    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage', 'ObsoleteLintCustomCheck', 'DefaultLocale', 'UnusedAttribute', 'VectorRaster', 'InflateParams', 'IconLocation', 'UnusedResources', 'TypographyEllipsis'
        abortOnError false
    }
}

dependencies {
    // Support libraries
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.0'

    // UI Libs
    implementation 'com.mikepenz:fastadapter:5.6.0'
    implementation 'jp.wasabeef:recyclerview-animators:4.0.2'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    // TODO: remote artifact on JitPack returned 401. Replace or host locally.
    // implementation 'agency.tango.android:material-intro-screen:0.0.6'
    implementation 'cat.ereza:customactivityoncrash:2.3.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    // The following libraries are unavailable from configured repositories (jcenter/ jitpack may require auth or are deprecated).
    // Commented out to allow CI builds to proceed. Replace with maintained alternatives or vendor the library.
    // implementation 'com.github.championswimmer:SimpleFingerGestures_Android_Library:1.2'
    // implementation 'com.nononsenseapps:filepicker:4.3.2'
    implementation 'org.slf4j:slf4j-android:1.7.36'

    // CircularReveal and MaterialScrollBar pulled from GitHub/JitPack may be unavailable.
    // implementation ('com.github.ozodrukh:CircularReveal:2.0.4@aar') {
    //     transitive = true
    // }

    // implementation('com.github.turing-tech:MaterialScrollBar:16.0.0') {
    //     exclude group: 'com.android.support'
    // }

    // Tools
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
}

repositories {
    mavenCentral()
}
