name: Android CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK command-line tools
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSfL "https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip" -o tools.zip
          unzip -q tools.zip
          mv cmdline-tools latest
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          # Accept SDK licenses non-interactively. 'yes' can exit with EPIPE when sdkmanager
          # terminates early which would make the step fail; ignore the exit status.
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true
          # Install required components; retry once on transient failures.
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2" || sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        shell: bash

      - name: Add Android SDK to PATH
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "PATH=${{ runner.temp }}/android-sdk/cmdline-tools/latest/bin:${{ runner.temp }}/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build (assembleDebug)
        run: ./gradlew app:assembleDebug --stacktrace
